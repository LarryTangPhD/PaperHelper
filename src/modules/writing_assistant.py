#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
智能写作助手模块
"""

from typing import Dict, Any

class WritingAssistant:
    """智能写作助手类"""
    
    def __init__(self):
        """初始化写作助手"""
        pass
    
    def get_writing_guide(self, topic: str) -> Dict[str, Any]:
        """获取写作指导"""
        guides = {
            "论文结构": """
# 论文结构指导

## 标准学术论文结构

### 1. 前置部分
- **标题**：简洁明确，反映研究内容
- **摘要**：200-300字，概括研究目的、方法、结果、结论
- **关键词**：3-5个，便于检索

### 2. 主体部分
- **引言**：研究背景、问题提出、研究意义
- **文献综述**：相关研究回顾，理论框架
- **研究方法**：研究设计、数据收集、分析方法
- **研究结果**：数据分析结果，图表展示
- **讨论**：结果解释，理论贡献，局限性
- **结论**：研究总结，实践意义，未来方向

### 3. 后置部分
- **参考文献**：标准格式引用
- **附录**：补充材料（如有需要）

## 结构要求
1. **逻辑性**：各部分逻辑关系清晰
2. **完整性**：包含必要的研究要素
3. **平衡性**：各部分篇幅合理分配
4. **一致性**：格式风格保持一致
""",
            "学术表达": """
# 学术表达指导

## 语言特点
1. **客观性**：避免主观判断和情感色彩
2. **准确性**：使用精确的学术术语
3. **简洁性**：表达简洁明了，避免冗余
4. **逻辑性**：使用逻辑连接词，增强连贯性

## 表达技巧
1. **使用第三人称**：避免第一人称，保持客观
2. **使用被动语态**：强调客观性，如"研究表明"
3. **使用专业术语**：保持术语使用的一致性
4. **使用逻辑连接词**：如"因此"、"然而"、"此外"等

## 常见表达
- 研究背景：随着...的发展，...日益重要
- 问题提出：然而，目前关于...的研究还不足
- 研究目的：本研究旨在探讨...
- 研究方法：采用...方法，对...进行分析
- 研究结果：结果表明...
- 研究意义：本研究对...具有重要理论意义和实践价值

## 避免的表达
- 避免主观评价：如"我认为"、"我觉得"
- 避免绝对化：如"完全"、"绝对"、"肯定"
- 避免口语化：如"很好"、"不错"、"棒"
- 避免重复表达：如"非常非常"、"特别特别"
""",
            "论证方法": """
# 论证方法指导

## 论证结构
1. **论点**：明确的主张或观点
2. **论据**：支持论点的证据和理由
3. **论证**：论据与论点的逻辑关系
4. **结论**：基于论证得出的结论

## 论证方法
1. **归纳论证**：从具体到一般
2. **演绎论证**：从一般到具体
3. **类比论证**：通过相似性进行推理
4. **因果论证**：通过因果关系进行推理

## 论证技巧
1. **数据论证**：使用统计数据支持观点
2. **案例论证**：使用典型案例说明问题
3. **理论论证**：使用理论框架分析问题
4. **对比论证**：通过对比突出观点

## 论证要求
1. **逻辑性**：论证过程逻辑清晰
2. **充分性**：论据充分，有说服力
3. **相关性**：论据与论点相关
4. **可靠性**：论据来源可靠，质量高
""",
            "文献综述": """
# 文献综述指导

## 综述目的
1. **了解研究现状**：掌握相关研究的发展状况
2. **发现研究空白**：识别需要进一步研究的领域
3. **确定研究问题**：基于文献分析确定研究问题
4. **建立理论框架**：为研究提供理论基础

## 综述方法
1. **系统性检索**：使用多种数据库和检索策略
2. **质量筛选**：选择高质量、相关性强的文献
3. **分类整理**：按主题、方法、时间等分类
4. **批判性分析**：对文献进行评价和分析

## 综述结构
1. **引言**：说明综述目的和范围
2. **理论基础**：介绍相关理论和概念
3. **研究现状**：总结现有研究成果
4. **研究评价**：评价研究的贡献和不足
5. **研究展望**：提出未来研究方向

## 写作技巧
1. **客观描述**：客观描述研究现状，避免主观评价
2. **逻辑组织**：按逻辑关系组织文献内容
3. **重点突出**：突出重要研究和关键发现
4. **批判思维**：对文献进行批判性分析
""",
            "研究方法": """
# 研究方法指导

## 研究方法选择
1. **研究目的**：根据研究目的选择合适方法
2. **研究问题**：根据研究问题特点选择方法
3. **研究资源**：考虑时间、经费、人员等资源
4. **研究伦理**：确保研究符合伦理要求

## 常见研究方法
1. **问卷调查**：适用于大样本、标准化数据收集
2. **深度访谈**：适用于深入了解、质性研究
3. **内容分析**：适用于文本、媒体内容分析
4. **实验法**：适用于因果关系研究
5. **案例研究**：适用于深入分析特定现象

## 方法设计要点
1. **样本设计**：确定样本大小、抽样方法
2. **工具设计**：设计问卷、访谈提纲等工具
3. **过程设计**：设计数据收集和分析过程
4. **质量控制**：确保研究质量和可靠性

## 方法报告要求
1. **详细描述**：详细描述研究设计和方法
2. **逻辑清晰**：方法选择和使用逻辑清晰
3. **可操作性**：方法具有可操作性
4. **可重复性**：其他研究者可以重复研究
""",
            "结论写作": """
# 结论写作指导

## 结论内容
1. **研究总结**：概括主要研究发现
2. **理论贡献**：说明对理论的贡献
3. **实践意义**：说明对实践的指导意义
4. **研究局限**：承认研究的局限性
5. **未来方向**：提出未来研究方向

## 写作要求
1. **简洁明了**：结论简洁，重点突出
2. **逻辑清晰**：结论逻辑关系清晰
3. **客观准确**：结论客观，避免夸大
4. **具体明确**：结论具体，避免空泛

## 常见问题
1. **重复摘要**：避免简单重复摘要内容
2. **夸大贡献**：避免夸大研究贡献
3. **忽视局限**：避免忽视研究局限性
4. **缺乏展望**：避免缺乏未来研究方向

## 写作技巧
1. **分点陈述**：分点陈述主要结论
2. **逻辑递进**：按逻辑递进组织结论
3. **前后呼应**：与引言和研究问题呼应
4. **适度展望**：适度展望未来研究方向
"""
        }
        
        if topic in guides:
            return {
                "success": True,
                "guide": guides[topic],
                "topic": topic
            }
        else:
            return {
                "success": False,
                "error": f"未找到'{topic}'的写作指导"
            }
    
    def generate_template(self, template_type: str, topic: str = "", requirements: str = "") -> Dict[str, Any]:
        """生成写作模板"""
        templates = {
            "论文大纲模板": """
# 论文大纲模板

## 标题
[论文标题]

## 1. 引言
### 1.1 研究背景
### 1.2 问题提出
### 1.3 研究意义

## 2. 文献综述
### 2.1 理论基础
### 2.2 相关研究
### 2.3 研究假设

## 3. 研究方法
### 3.1 研究设计
### 3.2 样本选择
### 3.3 数据收集
### 3.4 分析方法

## 4. 研究结果
### 4.1 描述性统计
### 4.2 假设检验
### 4.3 结果分析

## 5. 讨论
### 5.1 结果解释
### 5.2 理论贡献
### 5.3 实践意义

## 6. 结论
### 6.1 研究总结
### 6.2 未来研究

## 参考文献
""",
            "文献综述模板": """
# 文献综述写作模板

## 1. 引言部分
### 1.1 综述目的
### 1.2 文献来源

## 2. 理论基础
### 2.1 核心概念
### 2.2 理论框架

## 3. 研究现状
### 3.1 国外研究
### 3.2 国内研究

## 4. 研究主题分类
### 4.1 主题A相关研究
### 4.2 主题B相关研究

## 5. 研究评价
### 5.1 研究贡献
### 5.2 研究不足

## 6. 研究展望
### 6.1 研究空白
### 6.2 未来方向
""",
            "研究方法模板": """
# 研究方法写作模板

## 1. 研究设计
### 1.1 研究类型
### 1.2 研究框架

## 2. 研究对象
### 2.1 总体与样本
### 2.2 抽样方法

## 3. 数据收集
### 3.1 收集方法
### 3.2 收集工具
### 3.3 收集过程

## 4. 变量测量
### 4.1 变量定义
### 4.2 测量工具

## 5. 数据分析
### 5.1 统计方法
### 5.2 分析软件

## 6. 研究伦理
### 6.1 伦理考虑
### 6.2 伦理审批
""",
            "结论模板": """
# 结论写作模板

## 1. 研究总结
### 1.1 主要发现
### 1.2 研究贡献

## 2. 理论意义
### 2.1 理论发展
### 2.2 理论应用

## 3. 实践意义
### 3.1 政策建议
### 3.2 实践指导

## 4. 研究局限
### 4.1 理论局限
### 4.2 方法局限
### 4.3 应用局限

## 5. 未来研究
### 5.1 研究方向
### 5.2 研究重点
### 5.3 研究建议
"""
        }
        
        if template_type in templates:
            template = templates[template_type]
            
            # 如果有具体主题和要求，使用AI生成个性化模板
            if topic and requirements:
                return self._generate_custom_template(template_type, topic, requirements)
            else:
                return {
                    "success": True,
                    "template": template,
                    "type": template_type
                }
        else:
            return {
                "success": False,
                "error": f"未找到'{template_type}'的模板"
            }
    
    def _generate_custom_template(self, template_type: str, topic: str, requirements: str) -> Dict[str, Any]:
        """生成个性化模板"""
        try:
            from src.utils.PaperHelper_utils import get_llm
            from langchain.prompts import ChatPromptTemplate
            
            llm = get_llm(temperature=0.3)
            
            template_prompt = ChatPromptTemplate.from_messages([
                ("human", """你是一位资深的新闻传播学教授，请为以下研究主题生成专业的写作模板。

模板类型：{template_type}
研究主题：{topic}
具体要求：{requirements}

请生成一个详细、专业、可操作的写作模板，包含：
1. 模板结构
2. 各部分写作要点
3. 注意事项
4. 示例内容

请确保模板符合新闻传播学学术规范，内容具体、实用。""")
            ])
            
            chain = template_prompt | llm
            result = chain.invoke({
                "template_type": template_type,
                "topic": topic,
                "requirements": requirements
            }).content
            
            return {
                "success": True,
                "template": result,
                "type": template_type,
                "topic": topic
            }
            
        except Exception as e:
            return {
                "success": False,
                "error": f"生成模板时出错: {str(e)}"
            }
    
    def provide_real_time_suggestions(self, content: str, context: str = "") -> Dict[str, Any]:
        """提供实时写作建议"""
        try:
            from src.utils.PaperHelper_utils import get_llm
            from langchain.prompts import ChatPromptTemplate
            
            llm = get_llm(temperature=0.2)
            
            suggestion_prompt = ChatPromptTemplate.from_messages([
                ("human", """你是一位资深的新闻传播学教授，请对以下论文内容提供实时写作建议。

论文内容：{content}
写作上下文：{context}

请从以下方面提供建议：
1. **语言表达**：语法、用词、句式
2. **逻辑结构**：段落组织、逻辑连贯性
3. **学术规范**：引用格式、学术表达
4. **内容质量**：论证充分性、观点清晰度
5. **改进建议**：具体的修改建议

请提供简洁、具体、可操作的建议。""")
            ])
            
            chain = suggestion_prompt | llm
            result = chain.invoke({
                "content": content,
                "context": context
            }).content
            
            return {
                "success": True,
                "suggestions": result
            }
            
        except Exception as e:
            return {
                "success": False,
                "error": f"生成建议时出错: {str(e)}"
            }

# 创建全局实例
writing_assistant = WritingAssistant()
